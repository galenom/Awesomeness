swagger: "2.0"
info:
  description: "This is a Awesomeness Nomination server. You will be able to submit a nomination for any Solstie who is awesome."
  version: "1.0.0"
  title: "Awesomeness Nomination"
  contact:
    email: "kshah@solstice.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8070"
tags:
- name: "Employees"
  description: "Everything about Solstice Employees aka Solsties"
- name: "Nominations"
  description: "Create or review nominations"
schemes:
- "http"
paths:
  /employeeservice/api/employees/{id}:
    get:
      tags:
      - "Employees"
      summary: "Get employee information by id"
      description: "Get employee information using id"
      operationId: "getEmployee"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of employee to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        404:
          description: "Solstie Not Found"
        200:
          description: "Solstie Found"
          schema:
            $ref: '#/definitions/Employee'
  /nominationservice/api/nominations/{id}:
    get:
      tags:
      - "Nominations"
      summary: "Get nominations for solstie by id"
      description: "Get nominations for specific employee by id"
      operationId: "getNominationsForEmployee"
      produces: 
      - "application/json"
      parameters: 
      - name: "id"
        in: "path"
        description: "Solstice ID number"
        required: true
        type: "integer"
        format: "int64"
      responses:
        404:
          description: "No nominations for this solstie"
        200:
          description: "Nomination details"
          schema:
            type: "array"
            items:
              $ref: '#/definitions/Nomination'
  /nominationservice/api/nominations/dateBetween:
    get:
      tags:
      - "Nominations"
      summary: "Get nominations between dates start & end"
      description: "This is a description"
      operationId: "getNominationsForDateBetween"
      produces: 
      - "application/json"
      parameters: 
      - name: "start"
        in: "query"
        description: "Date range start"
        required: true
        type: "string"
      - name: "end"
        in: "query"
        description: "Date range end"
        required: true
        type: "string"
      responses:
        200:
          description: "Nominations between given date ranges"
          schema:
            type: "array"
            items:
              $ref: '#/definitions/Nomination'
        404:
          description: "Not found"
  /nominationservice/api/nominations/weekOf:
    get:
      tags:
      - "Nominations"
      summary: "Get nominations within the last week of the given date"
      description: "This is a description"
      operationId: "getNominationsForWeekOf"
      produces: 
      - "application/json"
      parameters: 
      - name: "dateOfWeek"
        in: "query"
        description: "Date range end"
        required: true
        type: "string"
      responses:
        200:
          description: "Nominations within the last 7 days of the given date"
          schema:
            type: "array"
            items:
              $ref: '#/definitions/Nomination'
        404:
          description: "Not found"
  /nominationservice/nominations:
    post:
      tags:
      - "Nominations"
      summary: "Post a new nomination for employee"
      description: "Create a new nomination with details for an employee"
      operationId: "postNomination"
      produces:
      - "application/json"
      parameters:
        - in: body
          name: ""
          description: The nomination to create.
          schema:
            $ref: '#/definitions/Nomination'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Nomination'
        400:
          description: "Bad Request"
        
definitions:
  Employee:
    type: "object"
    properties:
      employeeNumber:
        type: "integer"
        format: "int64"
      firstName:
        type: "string"
        example: "James"
      lastName:
        type: "string"
        example: "Bond"
      office:
        type: "string"
        example: "111"
      title:
        type: "string"
        example: "Technical Analyst"
      email:
        type: "string"
        example: "jbond@solstice.com"
      imageUrl:
        type: "string"
        example: "https://google.com"
    xml:
      name: "Employee"
  Nomination:
    type: "object"
    properties:
      nominatedByEmployee:
        $ref: '#/definitions/Employee'
      nominatedEmployee:
        $ref: '#/definitions/Employee'
      date:
        type: "string"
        format: "date-time"
      principals:
        type: "array"
        items:
          $ref: '#/definitions/Principals'
      description:
        type: "string"
        example: "007 is awesome!"
  Principals:
    type: "string"
    enum:
      - CATCH_EXCELLENCE
      - SERVANT_LEADERSHIP
      - PRACTICE_EMPATHY
      - EMPOWER_DISRUPTION
      - MAKE_DIFFERENCE
